[{"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\index.jsx":"1","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\App.jsx":"2","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AppRouter.jsx":"3","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AnimalsPage.jsx":"4","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\Layout.jsx":"5","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\NotFoundPage.jsx":"6","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Navigation.jsx":"7","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\HomePage\\HomePage.jsx":"8","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Login\\LoginPage.jsx":"9","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\ProductsPage\\ProductsPage.jsx":"10","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\AuthProvider.jsx":"11","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\useAuth.jsx":"12","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\api\\api.jsx":"13","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Citas\\AppointmentPage.jsx":"14","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Admin\\AdminPage.jsx":"15","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\PrivateRoute.jsx":"16","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\FormUtilities.jsx":"17","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Navi.jsx":"18","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\UserLayout.jsx":"19","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\CitaAccountPage.jsx":"20","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\WelcomeAccountPage.jsx":"21","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\AccountUtilities.jsx":"22","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AccountRouter.jsx":"23","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\AdminAccountPage.jsx":"24","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\UserNavLinks.jsx":"25","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\BaseAccountPage.jsx":"26","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Productos\\Products.jsx":"27","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Productos\\GestionsProducts.jsx":"28","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Register\\RegisterPage.jsx":"29","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\GestionUsuarios.jsx":"30","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\UsersUtilities.jsx":"31","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Usuarios\\RegisterUser.jsx":"32","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\GestionCitas.jsx":"33","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasUtilities.jsx":"34","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasAprobadas\\GestionCitasAprobadas.jsx":"35","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Citas\\RegisterCita.jsx":"36","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\CartPage\\CartPage.jsx":"37","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Validations.jsx":"38","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\Pedidos\\Pedidos.jsx":"39","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Pedidos\\GestionarPedidos.jsx":"40"},{"size":243,"mtime":1622744101385,"results":"41","hashOfConfig":"42"},{"size":251,"mtime":1622175272669,"results":"43","hashOfConfig":"42"},{"size":1441,"mtime":1625018534140,"results":"44","hashOfConfig":"42"},{"size":163,"mtime":1623192215180,"results":"45","hashOfConfig":"42"},{"size":899,"mtime":1624893826978,"results":"46","hashOfConfig":"42"},{"size":168,"mtime":1622063669830,"results":"47","hashOfConfig":"42"},{"size":3651,"mtime":1625018584973,"results":"48","hashOfConfig":"42"},{"size":15664,"mtime":1625017868886,"results":"49","hashOfConfig":"42"},{"size":2887,"mtime":1625019737424,"results":"50","hashOfConfig":"42"},{"size":3147,"mtime":1624915917064,"results":"51","hashOfConfig":"42"},{"size":1031,"mtime":1624659107169,"results":"52","hashOfConfig":"42"},{"size":177,"mtime":1622175239778,"results":"53","hashOfConfig":"42"},{"size":6932,"mtime":1624993865533,"results":"54","hashOfConfig":"42"},{"size":7470,"mtime":1625018718027,"results":"55","hashOfConfig":"42"},{"size":118,"mtime":1622257783606,"results":"56","hashOfConfig":"42"},{"size":304,"mtime":1622729999844,"results":"57","hashOfConfig":"42"},{"size":12445,"mtime":1624660615858,"results":"58","hashOfConfig":"42"},{"size":1403,"mtime":1622588790884,"results":"59","hashOfConfig":"42"},{"size":241,"mtime":1622658023625,"results":"60","hashOfConfig":"42"},{"size":5305,"mtime":1625020611491,"results":"61","hashOfConfig":"42"},{"size":939,"mtime":1625023174503,"results":"62","hashOfConfig":"42"},{"size":958,"mtime":1625024649997,"results":"63","hashOfConfig":"42"},{"size":2166,"mtime":1625022226233,"results":"64","hashOfConfig":"42"},{"size":1861,"mtime":1625024615215,"results":"65","hashOfConfig":"42"},{"size":693,"mtime":1625024927727,"results":"66","hashOfConfig":"42"},{"size":2106,"mtime":1623779287573,"results":"67","hashOfConfig":"42"},{"size":5968,"mtime":1625022136822,"results":"68","hashOfConfig":"42"},{"size":3993,"mtime":1625023021356,"results":"69","hashOfConfig":"42"},{"size":6222,"mtime":1625020071369,"results":"70","hashOfConfig":"42"},{"size":3902,"mtime":1625022533968,"results":"71","hashOfConfig":"42"},{"size":4967,"mtime":1624660706622,"results":"72","hashOfConfig":"42"},{"size":6965,"mtime":1625021887081,"results":"73","hashOfConfig":"42"},{"size":4543,"mtime":1625022701938,"results":"74","hashOfConfig":"42"},{"size":6869,"mtime":1624485026275,"results":"75","hashOfConfig":"42"},{"size":3485,"mtime":1625022819135,"results":"76","hashOfConfig":"42"},{"size":6824,"mtime":1625021996189,"results":"77","hashOfConfig":"42"},{"size":18895,"mtime":1625019359672,"results":"78","hashOfConfig":"42"},{"size":289,"mtime":1624766365064,"results":"79","hashOfConfig":"42"},{"size":5385,"mtime":1625021011440,"results":"80","hashOfConfig":"42"},{"size":4423,"mtime":1624933676600,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1fmw1bb",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\index.jsx",[],["166","167"],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\App.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AppRouter.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AnimalsPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\Layout.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\NotFoundPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Navigation.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Login\\LoginPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\ProductsPage\\ProductsPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\AuthProvider.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\useAuth.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\api\\api.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Citas\\AppointmentPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Admin\\AdminPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\PrivateRoute.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\FormUtilities.jsx",["168","169"],"// import { useState } from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\nimport { APICitas, APIProducts, IMG_URL } from \"../api/api\";\r\n\r\nconst Alerts = (message, variant) => {\r\n  return <Alert variant={variant}>{message}</Alert>;\r\n};\r\n\r\nconst CustomModal = ({\r\n  show,\r\n  handleClose,\r\n  appointments,\r\n  pickAppointment,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const [dates, setDates] = useState();\r\n  const [hasLoaded, setHasLoaded] = useState();\r\n  const isMountedRef = useRef(true);\r\n\r\n  const [formData, setFormData] = useState({\r\n    fecha: pickAppointment.appointment_date.split(\" \")[0],\r\n    hora: pickAppointment.appointment_date\r\n      .split(\" \")\r\n      .slice(1)\r\n      .toString()\r\n      .replace(\",\", \" \"),\r\n    desc: pickAppointment.descripcion,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Cita modificada correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const updateAppointment = async () => {\r\n    const res = await APICitas.updateCita({\r\n      fecha: formData.fecha,\r\n      hora: formData.hora,\r\n      descripcion: formData.desc,\r\n      appointmentId: pickAppointment.appointment_id,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  const getCitas = async () => {\r\n    const res = await APICitas.getDates();\r\n    if (isMountedRef.current) {\r\n      setDates(res);\r\n      setHasLoaded(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCitas();\r\n    return () => {\r\n      // setDates({});\r\n      // setHasLoaded({});\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formFecha\">\r\n            <Form.Label>Fecha</Form.Label>\r\n            <Form.Control\r\n              value={formData.fecha}\r\n              onChange={handleChange}\r\n              name=\"fecha\"\r\n              type=\"date\"\r\n              placeholder=\"Fecha\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n            <Form.Label>Hora de la Cita</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"hora\"\r\n              value={formData.hora}\r\n              onChange={handleChange}\r\n            >\r\n              <option disabled value={-1}>\r\n                {pickAppointment.appointment_date\r\n                  .split(\" \")\r\n                  .slice(1)\r\n                  .toString()\r\n                  .replace(\",\", \" \")}\r\n              </option>\r\n              <option>10:00 am</option>\r\n              <option>11:00 am</option>\r\n              <option>12:00 pm</option>\r\n              <option>13:00 pm</option>\r\n              <option>14:00 pm</option>\r\n              <option>15:00 pm</option>\r\n              <option>16:00 pm</option>\r\n              <option>17:00 pm</option>\r\n              <option>18:00 pm</option>\r\n              {/* <option value={-1}>{formData.hora}</option>\r\n              {hasLoaded ? (\r\n                Object.keys(dates).map((key) => (\r\n                  <option key={key}>\r\n                    {dates[key]\r\n                      .split(\" \")\r\n                      .slice(1)\r\n                      .toString()\r\n                      .replace(\",\", \" \")}\r\n                  </option>\r\n                ))\r\n              ) : (\r\n                <option>Loading...</option>\r\n              )} */}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formDesc\">\r\n            <Form.Label>Desccripción</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Descripción\"\r\n              name=\"desc\"\r\n              value={formData.desc}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={updateAppointment}>\r\n          Editar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalDelete = ({\r\n  show,\r\n  handleClose,\r\n  pickAppointment,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Cita eliminada correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.deleteCita({\r\n      appointment: pickAppointment,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desea eliminar la cita con fecha: ${\r\n        pickAppointment.appointment_date.split(\" \")[0]\r\n      } y hora: ${pickAppointment.appointment_date\r\n        .split(\" \")\r\n        .slice(1)\r\n        .toString()\r\n        .replace(\",\", \" \")}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalUpdate = ({\r\n  show,\r\n  handleClose,\r\n  selectedProduct,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const [formProduct, setFormProduct] = useState({\r\n    name: selectedProduct.name,\r\n    cantidad: selectedProduct.cantidad,\r\n    price: selectedProduct.price,\r\n    descripcion: selectedProduct.descripcion,\r\n    marca: selectedProduct.marca,\r\n  });\r\n\r\n  const [fileName, setFileName] = useState(selectedProduct.img);\r\n  const [selectedFile, setSelectedFile] = useState(\r\n    `${IMG_URL}${selectedProduct.img}`\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setFormProduct({\r\n      ...formProduct,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const [file] = e.target.files;\r\n    setFileName(file.name);\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setSelectedFile(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Cita modificada correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const updateProduct = async () => {\r\n    const res = await APIProducts.updateProduct({\r\n      id: selectedProduct.product_id,\r\n      name: formProduct.name,\r\n      cantidad: formProduct.cantidad,\r\n      price: formProduct.price,\r\n      descripcion: formProduct.descripcion,\r\n      marca: formProduct.marca,\r\n      imgName: fileName,\r\n      img: selectedFile,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar Producto</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formNombre\">\r\n            <Form.Label>Nombre del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.name}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nombre del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formMarca\">\r\n            <Form.Label>Marca del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.marca}\r\n              onChange={handleChange}\r\n              name=\"marca\"\r\n              type=\"text\"\r\n              placeholder=\"Marca del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formPrice\">\r\n            <Form.Label>Precio del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.price}\r\n              onChange={handleChange}\r\n              name=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Precio del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCantidad\">\r\n            <Form.Label>Stock del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.cantidad}\r\n              onChange={handleChange}\r\n              name=\"cantidad\"\r\n              type=\"text\"\r\n              placeholder=\"Stock del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formDesc\">\r\n            <Form.Label>Descripción</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Descripción\"\r\n              name=\"descripcion\"\r\n              value={formProduct.descripcion}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formImagen\">\r\n            <Form.Label>Imágen del Producto</Form.Label>\r\n            <Form.File\r\n              custom\r\n              label={fileName}\r\n              data-browse=\"Seleccionar\"\r\n              onChange={handleFileChange}\r\n              accept=\"image/*\"\r\n            ></Form.File>\r\n            <img\r\n              className=\"img-fluid mt-2\"\r\n              src={`${selectedFile}`}\r\n              alt=\"product-view\"\r\n            ></img>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={updateProduct}>\r\n          Editar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalDeleteProduct = ({\r\n  show,\r\n  handleClose,\r\n  selectedProduct,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Producto eliminado correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APIProducts.deleteProduct({\r\n      product: selectedProduct,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Producto</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desea eliminar el producto: ${selectedProduct.name}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { Alerts, CustomModal, ModalDelete, ModalUpdate, ModalDeleteProduct };\r\n","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Navi.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\UserLayout.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\CitaAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\WelcomeAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\AccountUtilities.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AccountRouter.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\AdminAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\UserNavLinks.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\BaseAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Productos\\Products.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Productos\\GestionsProducts.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Register\\RegisterPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\GestionUsuarios.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\UsersUtilities.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Usuarios\\RegisterUser.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\GestionCitas.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasUtilities.jsx",["170","171","172","173"],"import { APICitas, APIUsers } from \"../../../../../api/api\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst ModalApprovedCita = ({\r\n  show,\r\n  handleClose,\r\n  selectedCita,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n  message,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Notificación al usuario hecha y cita aprovada.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.ApproveCita({\r\n      cita: selectedCita,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Aprovar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desa aprovar y notificar al cliente de la cita con fecha : ${selectedCita.appointment_date}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Aprovar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalRemoveCita = ({\r\n  show,\r\n  handleClose,\r\n  selectedCita,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n  message,\r\n  messageAlert,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(`${messageAlert}`, \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.deleteCitaNotification({\r\n      cita: selectedCita,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿${message}: ${selectedCita.appointment_date}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// const ModalUpdateCita = ({\r\n//   show,\r\n//   handleClose,\r\n//   selectedCita,\r\n//   setAlert,\r\n//   setAlertMsg,\r\n//   setAlertVariant,\r\n// }) => {\r\n//   const [formUser, setFormUser] = useState({\r\n//     firstName: selectedCita.first_name,\r\n//     lastName: selectedCita.last_name,\r\n//     phone: selectedCita.phone,\r\n//     status: selectedCita.status,\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormUser({\r\n//       ...formUser,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleAlert = (msg, variant) => {\r\n//     setAlert(true);\r\n//     setAlertMsg(msg);\r\n//     setAlertVariant(variant);\r\n//     setTimeout(() => {\r\n//       setAlert(false);\r\n//       setAlertMsg(\"\");\r\n//       setAlertVariant(\"\");\r\n//     }, 3000);\r\n//     handleClose();\r\n//   };\r\n\r\n//   const checkResponse = (res) => {\r\n//     if (res[1].status === 400) {\r\n//       handleAlert(res[0][\"message\"], \"danger\");\r\n//     } else {\r\n//       handleAlert(\"Usuario modificado correctamente.\", \"success\");\r\n//     }\r\n//   };\r\n\r\n//   const updateUser = async () => {\r\n//     const res = await APIUsers.updateUser({\r\n//       id: selectedCita.user_id,\r\n//       firstName: formUser.firstName,\r\n//       lastName: formUser.lastName,\r\n//       phone: formUser.phone,\r\n//       status: formUser.status,\r\n//       fecha: selectedCita.appointment_date.split(\" \")[0],\r\n//       hora: selectedCita.appointment_date\r\n//         .split(\" \")\r\n//         .slice(1)\r\n//         .toString()\r\n//         .replace(\",\", \" \"),\r\n//     });\r\n//     checkResponse(res);\r\n//   };\r\n\r\n//   return (\r\n//     <Modal show={show} onHide={handleClose}>\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title>Editar Usuario</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formNombre\">\r\n//             <Form.Label>Nombre del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.firstName}\r\n//               onChange={handleChange}\r\n//               name=\"firstName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Nombre del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formApellidos\">\r\n//             <Form.Label>Apellidos</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.lastName}\r\n//               onChange={handleChange}\r\n//               name=\"lastName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Apellidos del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n//             <Form.Label>Número de teléfono del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.phone}\r\n//               onChange={handleChange}\r\n//               name=\"phone\"\r\n//               type=\"text\"\r\n//               placeholder=\"Teléfono del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formStatus\">\r\n//             <Form.Label>Status del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               as=\"select\"\r\n//               value={formUser.status}\r\n//               onChange={handleChange}\r\n//               name=\"status\"\r\n//             >\r\n//               <option disabled value={-1}>\r\n//                 Status actual: {selectedCita.status}\r\n//               </option>\r\n//               <option>Cliente</option>\r\n//               <option>Administrador</option>\r\n//             </Form.Control>\r\n//           </Form.Group>\r\n//         </Form>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"secondary\" onClick={handleClose}>\r\n//           Cancelar\r\n//         </Button>\r\n//         <Button variant=\"primary\" onClick={updateUser}>\r\n//           Editar\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\nexport { ModalRemoveCita, ModalApprovedCita };\r\n","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasAprobadas\\GestionCitasAprobadas.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Citas\\RegisterCita.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\CartPage\\CartPage.jsx",["174"],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Validations.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\Pedidos\\Pedidos.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Pedidos\\GestionarPedidos.jsx",["175","176","177","178","179"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport {\r\n  Alerts,\r\n  ModalDeleteProduct,\r\n  ModalUpdate,\r\n} from \"../../../../../components/FormUtilities\";\r\nimport styles from \"./GestionarPedidos.module.css\";\r\n\r\nconst GestionarPedidos = () => {\r\n  const [pedidos, setPedidos] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [selectedPedido, setSelectedPedido] = useState();\r\n  const [deletePedido, setDeletePedido] = useState(false);\r\n\r\n  const [alert, setAlert] = useState();\r\n  const [alertMsg, setAlertMsg] = useState();\r\n  const [alertVariant, setAlertVariant] = useState();\r\n\r\n  const handleShow = (pedido) => {\r\n    setShow(!show);\r\n    setSelectedPedido(pedido);\r\n  };\r\n\r\n  const handleDelete = (pedido) => {\r\n    setDeletePedido(!deletePedido);\r\n    setSelectedPedido(pedido);\r\n  };\r\n\r\n  const getPedidos = async () => {\r\n    const res = await fetch(\"/pedidos/getAllPedidos\");\r\n    const json = await res.json();\r\n    setPedidos(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPedidos();\r\n  }, [show, deletePedido]);\r\n\r\n  return (\r\n    <Container fluid className={styles.container}>\r\n      <h1 className=\"text-center pt-4\">Gestión de Pedidos</h1>\r\n      <div className={styles.tableCont}>\r\n        {alert ? Alerts(alertMsg, alertVariant, setAlert) : null}\r\n        <Table striped className=\"\" responsive>\r\n          <thead className={styles.tableHead}>\r\n            <tr className=\"text-center\">\r\n              <th>ID</th>\r\n              <th>Cliente</th>\r\n              <th>Dirección</th>\r\n              <th>Fecha del Pedido</th>\r\n              <th>Productos</th>\r\n              <th>Total</th>\r\n              <th>Status</th>\r\n              <th>Modificar</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pedidos ? (\r\n              Object.keys(pedidos).map((item) => {\r\n                return (\r\n                  <tr className=\"text-center\" key={pedidos[item].product_id}>\r\n                    <td>{`#${pedidos[item].pedido_id}`}</td>\r\n                    <td>{pedidos[item].user_id}</td>\r\n                    <td>{`${pedidos[item].direccion}, ${pedidos[item].codigo_postal}`}</td>\r\n                    <td>{pedidos[item].date}</td>\r\n                    {pedidos[item].products.map((producto) => {\r\n                      return (\r\n                        <td className=\"d-flex flex-column\">\r\n                          <span>{producto.name}</span>\r\n                          <span>{producto.totalNum}</span>\r\n                        </td>\r\n                      );\r\n                    })}\r\n                    <td>{`$${pedidos[item].total}`}</td>\r\n                    <td>{pedidos[item].status}</td>\r\n                    <td>\r\n                      <div className={styles.btnContainer}>\r\n                        <div\r\n                          className={styles.editIcon}\r\n                          onClick={() => handleShow(pedidos[item])}\r\n                        >\r\n                          <i className=\"bx bxs-edit\"></i>\r\n                        </div>\r\n                        <div\r\n                          className={styles.deleteIcon}\r\n                          onClick={() => handleDelete(pedidos[item])}\r\n                        >\r\n                          <i className=\"bx bxs-trash-alt\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td>Loading</td>\r\n              </tr>\r\n            )}\r\n            {/* {show ? (\r\n              <ModalUpdate\r\n                show={show}\r\n                handleClose={handleShow}\r\n                selectedProduct={selectedProduct}\r\n                setAlert={setAlert}\r\n                setAlertMsg={setAlertMsg}\r\n                setAlertVariant={setAlertVariant}\r\n              />\r\n            ) : null}\r\n            {deleteProduct ? (\r\n              <ModalDeleteProduct\r\n                show={deleteProduct}\r\n                handleClose={handleDelete}\r\n                selectedProduct={selectedProduct}\r\n                setAlert={setAlert}\r\n                setAlertMsg={setAlertMsg}\r\n                setAlertVariant={setAlertVariant}\r\n              />\r\n            ) : null} */}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GestionarPedidos;\r\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":19,"column":10,"nodeType":"186","messageId":"187","endLine":19,"endColumn":15},{"ruleId":"184","severity":1,"message":"188","line":20,"column":10,"nodeType":"186","messageId":"187","endLine":20,"endColumn":19},{"ruleId":"184","severity":1,"message":"189","line":1,"column":20,"nodeType":"186","messageId":"187","endLine":1,"endColumn":28},{"ruleId":"184","severity":1,"message":"190","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":15},{"ruleId":"184","severity":1,"message":"191","line":2,"column":25,"nodeType":"186","messageId":"187","endLine":2,"endColumn":29},{"ruleId":"184","severity":1,"message":"192","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":18},{"ruleId":"184","severity":1,"message":"193","line":122,"column":9,"nodeType":"186","messageId":"187","endLine":122,"endColumn":20},{"ruleId":"184","severity":1,"message":"194","line":5,"column":3,"nodeType":"186","messageId":"187","endLine":5,"endColumn":21},{"ruleId":"184","severity":1,"message":"195","line":6,"column":3,"nodeType":"186","messageId":"187","endLine":6,"endColumn":14},{"ruleId":"184","severity":1,"message":"196","line":13,"column":10,"nodeType":"186","messageId":"187","endLine":13,"endColumn":24},{"ruleId":"184","severity":1,"message":"197","line":17,"column":20,"nodeType":"186","messageId":"187","endLine":17,"endColumn":31},{"ruleId":"184","severity":1,"message":"198","line":18,"column":24,"nodeType":"186","messageId":"187","endLine":18,"endColumn":39},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'dates' is assigned a value but never used.","Identifier","unusedVar","'hasLoaded' is assigned a value but never used.","'APIUsers' is defined but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'useState' is defined but never used.","'clearInputs' is assigned a value but never used.","'ModalDeleteProduct' is defined but never used.","'ModalUpdate' is defined but never used.","'selectedPedido' is assigned a value but never used.","'setAlertMsg' is assigned a value but never used.","'setAlertVariant' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]