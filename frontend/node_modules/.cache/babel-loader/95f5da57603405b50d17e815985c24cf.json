{"ast":null,"code":"function getCookie(name) {\n  let cookieValue = \"\";\n\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nclass APIUsers {\n  static async login(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    return response;\n  }\n\n}\n\nclass APICitas {\n  static async createCita(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/createCita\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async getDates() {\n    const response = await fetch(\"/citas/getDates\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    return json; // setDates(json);\n    // setHasLoaded(true);\n  }\n\n  static async updateCita(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/updateCita\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async deleteCita({\n    appointment\n  }) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(`/citas/deleteAppointment/${appointment.appointment_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": csrfToken\n      }\n    });\n    console.log(response);\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nclass APIProducts {\n  static async createProduct(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/products/createProduct\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nclass APIAnimals {\n  static async createProduct(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/animals/createAnimal\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nconst IMG_URL = \"http://localhost:5000/static/img/products/\";\nexport { APIUsers, APICitas, APIProducts, APIAnimals, IMG_URL };","map":{"version":3,"sources":["C:/Users/ederivc/Documents/PuppyVeterinarySystem/frontend/src/api/api.jsx"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","APIUsers","login","data","csrfToken","response","fetch","method","headers","body","JSON","stringify","APICitas","createCita","json","getDates","updateCita","deleteCita","appointment","appointment_id","console","log","APIProducts","createProduct","APIAnimals","IMG_URL"],"mappings":"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","sourcesContent":["function getCookie(name) {\r\n  let cookieValue = \"\";\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    const cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nclass APIUsers {\r\n  static async login(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response;\r\n  }\r\n}\r\n\r\nclass APICitas {\r\n  static async createCita(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/createCita\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async getDates() {\r\n    const response = await fetch(\"/citas/getDates\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n    // setDates(json);\r\n    // setHasLoaded(true);\r\n  }\r\n\r\n  static async updateCita(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/updateCita\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async deleteCita({ appointment }) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\r\n      `/citas/deleteAppointment/${appointment.appointment_id}/`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"X-CSRFToken\": csrfToken,\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nclass APIProducts {\r\n  static async createProduct(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/products/createProduct\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nclass APIAnimals {\r\n  static async createProduct(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/animals/createAnimal\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nconst IMG_URL = \"http://localhost:5000/static/img/products/\";\r\n\r\nexport { APIUsers, APICitas, APIProducts, APIAnimals, IMG_URL };\r\n"]},"metadata":{},"sourceType":"module"}