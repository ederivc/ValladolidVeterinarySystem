{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ederivc\\\\Documents\\\\PuppyVeterinarySystem\\\\frontend\\\\src\\\\components\\\\FormUtilities.jsx\",\n    _s = $RefreshSig$();\n\n// import { useState } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\nimport { APICitas } from \"../api/api\";\nimport useAuth from \"../auth/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alerts = (message, variant) => {\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: variant,\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Alerts;\n\nconst CustomModal = ({\n  show,\n  handleClose,\n  pickAppointment\n}) => {\n  _s();\n\n  const [dates, setDates] = useState();\n  const [hasLoaded, setHasLoaded] = useState();\n  const [userAppointment, setUserAppointment] = useState();\n  const [dbAppointments, setDBAppointments] = useState();\n  const [appointment, setAppointment] = useState({\n    fecha: \"\",\n    hora: \"\",\n    desc: \"\"\n  });\n\n  const handleChange = e => {\n    setAppointment({ ...appointment,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const fetchAppointments = async () => {\n    const response = await fetch(\"/citas/getAppointment\");\n    const json = await response.json();\n    console.log(\"----\");\n    console.log(json); // if (dbAppointments) setDBAppointments(json);\n    // console.log(dbAppointments);\n\n    setDBAppointments(json); // if (!dbAppointments) {\n    //   console.log(\"hahhahha\");\n    //   setDBAppointments(json);\n    // }\n\n    if (dbAppointments[\"0\"]) {\n      console.log(\"jahsjkd\");\n    }\n\n    console.log(dbAppointments[\"0\"]); // console.log(dbAppointments[0][\"appointment_id\"]);\n    // setDBAppointments((dbAppointments) => [...dbAppointments, json]);\n    // console.log(dbAppointments);\n    // console.log(dbAppointments);\n    // Object.keys(json).forEach((appoint) => {\n    //   if (json[appoint][\"appointment_id\"] === pickAppointment.appointment_id) {\n    //     setUserAppointment(json[appoint]);\n    //   }\n    // });\n    // console.log(userAppointment);\n  };\n\n  useEffect(() => {\n    fetchAppointments();\n    APICitas.getDates(setDates, setHasLoaded);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Editar cita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formFecha\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: appointment.fecha,\n            onChange: handleChange,\n            name: \"fecha\",\n            type: \"date\",\n            placeholder: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicCheckbox\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hora de la Cita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"hora\" // className={styles.input}\n            ,\n            value: appointment.hora,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Seleccione la hora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), hasLoaded ? Object.keys(dates).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: dates[key].split(\" \").slice(1).toString().replace(\",\", \" \")\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formDesc\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Desccripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            placeholder: \"Descripci\\xF3n\",\n            name: \"desc\",\n            value: appointment.desc,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleClose,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomModal, \"oJagdJA5jLjSaoQkdS2mBD/ryro=\");\n\n_c2 = CustomModal;\nexport { Alerts, CustomModal };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alerts\");\n$RefreshReg$(_c2, \"CustomModal\");","map":{"version":3,"sources":["C:/Users/ederivc/Documents/PuppyVeterinarySystem/frontend/src/components/FormUtilities.jsx"],"names":["useEffect","useState","Alert","Button","Form","Modal","APICitas","useAuth","Alerts","message","variant","CustomModal","show","handleClose","pickAppointment","dates","setDates","hasLoaded","setHasLoaded","userAppointment","setUserAppointment","dbAppointments","setDBAppointments","appointment","setAppointment","fecha","hora","desc","handleChange","e","target","name","value","fetchAppointments","response","fetch","json","console","log","getDates","Object","keys","map","key","split","slice","toString","replace"],"mappings":"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","sourcesContent":["// import { useState } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\nimport { APICitas } from \"../api/api\";\r\nimport useAuth from \"../auth/useAuth\";\r\n\r\nconst Alerts = (message, variant) => {\r\n  return <Alert variant={variant}>{message}</Alert>;\r\n};\r\n\r\nconst CustomModal = ({ show, handleClose, pickAppointment }) => {\r\n  const [dates, setDates] = useState();\r\n  const [hasLoaded, setHasLoaded] = useState();\r\n  const [userAppointment, setUserAppointment] = useState();\r\n  const [dbAppointments, setDBAppointments] = useState();\r\n\r\n  const [appointment, setAppointment] = useState({\r\n    fecha: \"\",\r\n    hora: \"\",\r\n    desc: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setAppointment({\r\n      ...appointment,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const fetchAppointments = async () => {\r\n    const response = await fetch(\"/citas/getAppointment\");\r\n    const json = await response.json();\r\n    console.log(\"----\");\r\n    console.log(json);\r\n\r\n    // if (dbAppointments) setDBAppointments(json);\r\n    // console.log(dbAppointments);\r\n    setDBAppointments(json);\r\n    // if (!dbAppointments) {\r\n    //   console.log(\"hahhahha\");\r\n    //   setDBAppointments(json);\r\n    // }\r\n\r\n    if (dbAppointments[\"0\"]) {\r\n      console.log(\"jahsjkd\");\r\n    }\r\n\r\n    console.log(dbAppointments[\"0\"]);\r\n    // console.log(dbAppointments[0][\"appointment_id\"]);\r\n    // setDBAppointments((dbAppointments) => [...dbAppointments, json]);\r\n    // console.log(dbAppointments);\r\n\r\n    // console.log(dbAppointments);\r\n    // Object.keys(json).forEach((appoint) => {\r\n    //   if (json[appoint][\"appointment_id\"] === pickAppointment.appointment_id) {\r\n    //     setUserAppointment(json[appoint]);\r\n    //   }\r\n    // });\r\n    // console.log(userAppointment);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    APICitas.getDates(setDates, setHasLoaded);\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formFecha\">\r\n            <Form.Label>Fecha</Form.Label>\r\n            <Form.Control\r\n              value={appointment.fecha}\r\n              onChange={handleChange}\r\n              name=\"fecha\"\r\n              type=\"date\"\r\n              placeholder=\"Fecha\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n            <Form.Label>Hora de la Cita</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"hora\"\r\n              // className={styles.input}\r\n              value={appointment.hora}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={-1}>Seleccione la hora</option>\r\n              {hasLoaded ? (\r\n                Object.keys(dates).map((key) => (\r\n                  <option key={key}>\r\n                    {dates[key]\r\n                      .split(\" \")\r\n                      .slice(1)\r\n                      .toString()\r\n                      .replace(\",\", \" \")}\r\n                  </option>\r\n                ))\r\n              ) : (\r\n                <option>Loading...</option>\r\n              )}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formDesc\">\r\n            <Form.Label>Desccripción</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Descripción\"\r\n              name=\"desc\"\r\n              value={appointment.desc}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          {/* <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button> */}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClose}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { Alerts, CustomModal };\r\n"]},"metadata":{},"sourceType":"module"}