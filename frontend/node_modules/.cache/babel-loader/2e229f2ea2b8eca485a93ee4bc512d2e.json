{"ast":null,"code":"function getCookie(name) {\n  let cookieValue = \"\";\n\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nclass APIUsers {\n  static async createUser(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n    return response;\n  }\n\n}\n\nexport { APIUsers }; // const handleSubmit = async (e) => {\n//   e.preventDefault()\n//   const res = await fetch(\"/auth/login\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       username: \"nuev\",\n//       password: \"pasnew\",\n//       country: \"asd\",\n//       email: \"kkk\",\n//     }),\n//   });\n//   const data = await res.json()\n//   console.log(data)\n// }\n// static async createAlumno(data: {\n//   numeroControl: number;\n//   datosPersonales: DatosPersonales;\n//   direccion: Direccion;\n//   porcentajeBeca: string;\n//   fechaInscripcion: string;\n//   fechaPago: string;\n//   requiereFactura: boolean;\n// }): Promise<Response> {\n//   const csrfToken = getCookie(\"csrftoken\");\n//   const response = await fetch(`/school/api/alumno/`, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       \"X-CSRFToken\": csrfToken,\n//     },\n//     body: JSON.stringify(data),\n//   });\n//   return response;\n// }","map":{"version":3,"sources":["C:/Users/ederivc/Documents/PuppyVeterinarySystem/frontend/src/api/api.jsx"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","APIUsers","createUser","data","csrfToken","response","fetch","method","headers","body","JSON","stringify","console","log"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,IAAnB,EAAyC;AACvC,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC7C,UAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAMH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAf;;AACA,UAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAAyCP,IAAI,GAAG,GAApD,EAAyD;AACvDC,QAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACD;AACF;AACF;;AACD,SAAON,WAAP;AACD;;AAED,MAAMU,QAAN,CAAe;AACU,eAAVC,UAAU,CAACC,IAAD,EAAO;AAC5B,UAAMC,SAAS,GAAGf,SAAS,CAAC,WAAD,CAA3B;AACA,UAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uBAAeJ;AAFR,OAFiC;AAM1CK,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANoC,KAAhB,CAA5B;AAQAS,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,WAAOA,QAAP;AACD;;AAbY;;AAgBf,SAASJ,QAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function getCookie(name: string): string {\r\n  let cookieValue = \"\";\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    const cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nclass APIUsers {\r\n  static async createUser(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    console.log(response);\r\n    return response;\r\n  }\r\n}\r\n\r\nexport { APIUsers };\r\n\r\n// const handleSubmit = async (e) => {\r\n//   e.preventDefault()\r\n//   const res = await fetch(\"/auth/login\", {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify({\r\n//       username: \"nuev\",\r\n//       password: \"pasnew\",\r\n//       country: \"asd\",\r\n//       email: \"kkk\",\r\n//     }),\r\n//   });\r\n//   const data = await res.json()\r\n//   console.log(data)\r\n// }\r\n\r\n// static async createAlumno(data: {\r\n//   numeroControl: number;\r\n//   datosPersonales: DatosPersonales;\r\n//   direccion: Direccion;\r\n//   porcentajeBeca: string;\r\n//   fechaInscripcion: string;\r\n//   fechaPago: string;\r\n//   requiereFactura: boolean;\r\n// }): Promise<Response> {\r\n//   const csrfToken = getCookie(\"csrftoken\");\r\n//   const response = await fetch(`/school/api/alumno/`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//       \"X-CSRFToken\": csrfToken,\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   });\r\n//   return response;\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}